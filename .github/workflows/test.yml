name: Test Python Package
on: push

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.8']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v3

      - name: Install Pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      #----------------------------------------------
      #          install and run linters
      #----------------------------------------------
      - run: python -m pip install black flake8 make
      - run: |
          make lint

  test:
    needs: lint
    name: Python Test (${{ matrix.python-version }}, ${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv (if cache exists)
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (if no cache found)
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install Reflekt
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
